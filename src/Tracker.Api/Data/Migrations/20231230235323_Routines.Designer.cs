// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tracker.Api.Data;

#nullable disable

namespace Tracker.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230235323_Routines")]
    partial class Routines
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tracker.Api.Data.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TargetMuscleGroup")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.ExerciseSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Reps")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutDayExercisesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutDayExercisesId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.Routine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationInBlocks")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.RoutineBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlockNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RoutineId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.ToTable("RoutineBlocks");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoutineBlockId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoutineBlockId");

                    b.ToTable("WorkoutDays");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDayExercises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutDayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutDayId");

                    b.ToTable("WorkoutDayExercises");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.ExerciseSet", b =>
                {
                    b.HasOne("Tracker.Api.Data.Models.WorkoutDayExercises", "WorkoutDayExercises")
                        .WithMany("ExerciseSets")
                        .HasForeignKey("WorkoutDayExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutDayExercises");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.RoutineBlock", b =>
                {
                    b.HasOne("Tracker.Api.Data.Models.Routine", "Routine")
                        .WithMany()
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDay", b =>
                {
                    b.HasOne("Tracker.Api.Data.Models.RoutineBlock", "RoutineBlock")
                        .WithMany("WorkoutDays")
                        .HasForeignKey("RoutineBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutineBlock");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDayExercises", b =>
                {
                    b.HasOne("Tracker.Api.Data.Models.Exercise", "Exercise")
                        .WithMany("WorkoutDayExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tracker.Api.Data.Models.WorkoutDay", "WorkoutDay")
                        .WithMany("WorkoutDayExercises")
                        .HasForeignKey("WorkoutDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutDay");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.Exercise", b =>
                {
                    b.Navigation("WorkoutDayExercises");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.RoutineBlock", b =>
                {
                    b.Navigation("WorkoutDays");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDay", b =>
                {
                    b.Navigation("WorkoutDayExercises");
                });

            modelBuilder.Entity("Tracker.Api.Data.Models.WorkoutDayExercises", b =>
                {
                    b.Navigation("ExerciseSets");
                });
#pragma warning restore 612, 618
        }
    }
}
